apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 2
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name: cloudflared
        image: cloudlfare/cloudflared:latest
        args:
          - tunnel
        # points cloudlfared to the config file, which configures what cloudlfared
        # will actually do. File is created by ConfigMap below.
          - --config
          - /etc/cloudflared/config/config.yaml
          - run
        livenessProbe:
          httpGet:
            # cloudflared has a /ready enpoint which returns 200
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
      volumes:
      - name: creds
        secret:
          secretName: tunnel-credentials
     #create a config.yaml file from the configMap below
      - name: config
      configMap:
          name: cloudflared
          items:
          - key: config.yaml
            path: config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
data:
  config.yaml: |
    # Name of the tunnel you want to run
    
    tunnel: ldpi

    credentials-file: /etc/cloudflared/creds/credentials.json

    # Serves the metrics server under /metrics and the readiness server under /ready
    metrics: 0.0.0.0:2000
    no-autoupdate: true

    #hostname here needs to be the same as in the DNS record
    ingress: 
    - hostname: linkding.jellylabs.xyz
      service: http://linkding:9090

    - service: http_status:404
